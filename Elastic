C
C User subroutine VUMAT
      subroutine vumat (
C Read only (unmodifiable)variables -
     1  nblock, ndir, nshr, nstatev, nfieldv, nprops, lanneal,
     2  stepTime, totalTime, dt, cmname, coordMp, charLength,
     3  props, density, strainInc, relSpinInc,
     4  tempOld, stretchOld, defgradOld, fieldOld,
     5  stressOld, stateOld, enerInternOld, enerInelasOld,
     6  tempNew, stretchNew, defgradNew, fieldNew,
C Write only (modifiable) variables -
     7  stressNew, stateNew, enerInternNew, enerInelasNew )
C
      include 'vaba_param.inc'
C
      dimension props(nprops), density(nblock), coordMp(nblock,*),
     1  charLength(nblock), strainInc(nblock,ndir+nshr),
     2  relSpinInc(nblock,nshr), tempOld(nblock),
     3  stretchOld(nblock,ndir+nshr),
     4  defgradOld(nblock,ndir+nshr+nshr),
     5  fieldOld(nblock,nfieldv), stressOld(nblock,ndir+nshr),
     6  stateOld(nblock,nstatev), enerInternOld(nblock),
     7  enerInelasOld(nblock), tempNew(nblock),
     8  stretchNew(nblock,ndir+nshr),
     8  defgradNew(nblock,ndir+nshr+nshr),
     9  fieldNew(nblock,nfieldv),
     1  stressNew(nblock,ndir+nshr), stateNew(nblock,nstatev),
     2  enerInternNew(nblock), enerInelasNew(nblock)
      
      character*80 cmname
      
      real(8) :: e, nu, mu
      parameter(one = 1.d0, two = 2.d0, three = 3.d0, zero = 0.d0,
     *   six = 6.d0)
      
      e = props(1)
      nu = props(2)
      
      mu = e / (two * (one) + nu)
      lamda = two * nu * mu / (one - two * nu)
      
      do k = 1, nblock
          inc = sum(strainInc(k, 1:3))
          do k1 = 1, ndir
              stressNew(k, k1) = stressOld(k, k1) + lamda * inc + two *
     *            mu * strainInc(k, k1)
          end do
          
          do k1 = 1 + ndir, ndir + nshr
              stressNew(k, k1) = stressOld(k, k1) + 
     *            two * mu * strainInc(k, k1)
          end do
       
          stateNew(k, 1) = stateOld(k, 0) + 
     *        sum(strainInc(k, 1: ndir)) / three
          
          enerInternNew(k) = enerInternOld(k) + 
     *        dot_product((stressold(k, 1: ndir + nshr) + 
     *         stressNew(k, 1: ndir + nshr)) / two , 
     *         strainInc(k, 1: ndir + nshr)) / density(k)
      
      end do
      
      RETURN
      END
